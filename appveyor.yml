branches:
  only:
    - master

shallow_clone: true
clone_depth: 1

install:
  # Set Qt toolkit path
  - set QTDIR=C:\Qt\5.9\mingw53_32

  # Use MinGW shipped with Qt, since the one on C:\ is different and gives compilation errors!
  - set PATH=%PATH%;%QTDIR%\bin;C:\Qt\Tools\mingw530_32\bin

  # Build Leviathan version file
  - python appveyor_generateversion.py
  
build_script:
  - cd src
  - qmake Leviathan.pro CONFIG+=release
  - mingw32-make -j2
  - cd ..
  #- cd %APPVEYOR_BUILD_FOLDER%

after_build:
  - mkdir deploy
  - copy /Y src\release\Leviathan.exe deploy

  # Prepare the libraries and the other files to deploy  
  - C:\Qt\5.9\mingw53_32\bin\windeployqt.exe --force --compiler-runtime --no-translations --no-opengl-sw --no-system-d3d-compiler --no-quick-import --no-angle --no-webkit2 deploy
  - copy /Y "c:\Qt\tools\mingw530_32\bin\libstdc++-6.dll" deploy	# the one from the non-Qt MinGW package gives problems
  - del deploy\*64*.dll

  # Copy extra required libs
  - copy /Y winlibs\32\zlibwapi.dll deploy

  # Pack everything in a zip
  - 7z a LeviathanWin32-automated-%APPVEYOR_REPO_TAG_NAME%.zip deploy\*

artifacts:
  - path: LeviathanWin32-automated-$(APPVEYOR_REPO_TAG_NAME).zip
    name: zipbin

deploy:
  release: $(APPVEYOR_REPO_TAG_NAME)
  description: ''
  provider: GitHub
  auth_token:
    secure: Hb86lGnsXj56Q4P+Y1pRpovrFJ5Qa/Bn6+Zr9L6Maqmlx978GU3hFhWcqpTD326w
  artifact: zipbin
  draft: false
  prerelease: false
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: true        # deploy on tag push only
